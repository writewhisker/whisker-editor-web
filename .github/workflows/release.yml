name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test:run

      - name: Type check
        run: npm run check

      - name: Build
        run: npm run build

      - name: Extract version from tag
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Extract changelog for this version
        id: changelog
        run: |
          # Extract changelog section for this version
          VERSION=${{ steps.version.outputs.version }}
          awk "/## \[$VERSION\]/,/## \[/" CHANGELOG.md | sed '1d;$d' > release_notes.md || echo "See CHANGELOG.md for details." > release_notes.md

      - name: Create distribution archive
        run: |
          cd dist
          tar -czf ../whisker-editor-web-${{ steps.version.outputs.version }}.tar.gz *
          cd ..

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: whisker-editor-web ${{ steps.version.outputs.tag }}
          body_path: release_notes.md
          files: whisker-editor-web-${{ steps.version.outputs.version }}.tar.gz
          draft: false
          prerelease: ${{ contains(steps.version.outputs.version, 'alpha') || contains(steps.version.outputs.version, 'beta') || contains(steps.version.outputs.version, 'rc') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-npm:
    name: Publish to npm (Optional)
    runs-on: ubuntu-latest
    needs: create-release
    if: ${{ !contains(github.ref, 'alpha') && !contains(github.ref, 'beta') }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Publish to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          if [ -n "$NODE_AUTH_TOKEN" ]; then
            npm publish --access public
          else
            echo "‚ö†Ô∏è NPM_TOKEN not set. Skipping npm publish."
            echo "To enable automatic publishing, add NPM_TOKEN to repository secrets."
          fi

  deploy-demo:
    name: Deploy Demo to GitHub Pages
    runs-on: ubuntu-latest
    needs: create-release

    permissions:
      contents: read
      pages: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build for production
        run: npm run build
        env:
          BASE_URL: /whisker-editor-web/

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Comment deployment URL
        uses: actions/github-script@v7
        with:
          script: |
            const tagName = context.ref.replace('refs/tags/', '');
            const deploymentUrl = 'https://${{ github.repository_owner }}.github.io/whisker-editor-web/';

            github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: `üöÄ **Release ${tagName} deployed!**\n\nDemo: ${deploymentUrl}`
            });
